<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/docs/_includes/gallery.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/docs/_includes/gallery.html" />
              <option name="originalContent" value="{%- assign gallery_dir = include.dir | default: '/assets/' -%}&#10;{%- assign image_exts = &quot;jpg,jpeg,png,gif,webp&quot; | split: &quot;,&quot; -%}&#10;{%- assign gallery_images = &quot;&quot; | split: &quot;&quot; -%}&#10;{%- for file in site.static_files -%}&#10;  {%- assign ext = file.extname | remove: &quot;.&quot; | downcase -%}&#10;  {%- if image_exts contains ext and file.path contains gallery_dir -%}&#10;    {%- assign gallery_images = gallery_images | push: file -%}&#10;  {%- endif -%}&#10;{%- endfor -%}&#10;{%- assign gallery_images = gallery_images | sort: &quot;path&quot; -%}&#10;{%- assign gallery_meta = site.data.gallery | default: [] -%}&#10;&#10;&lt;style&gt;&#10;    /* Final-Tiles/Masonry Grid */&#10;    .ftg-grid {&#10;        display: grid;&#10;        grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));&#10;        grid-auto-rows: 10px;&#10;        grid-auto-flow: dense;&#10;        gap: 12px;&#10;        margin-top: 1rem;&#10;    }&#10;&#10;    .ftg-item {&#10;        position: relative;&#10;        display: block;&#10;        box-shadow: none; /* Kein Schatten an der Box */&#10;        cursor: pointer;&#10;        transition: box-shadow .2s ease;&#10;        padding: 0;&#10;        background: transparent;&#10;    }&#10;&#10;    .ftg-item:hover {&#10;        box-shadow: none; /* Auch beim Hover kein Schatten an der Box */&#10;    }&#10;&#10;    .ftg-item img {&#10;        display: block;&#10;        width: 100%;&#10;        height: auto;&#10;        background: #eee;&#10;        transition: transform .25s ease;&#10;        border-radius: 0;&#10;        box-shadow: none; /* Kein Schatten am Bild */&#10;    }&#10;&#10;    .ftg-item:hover img {&#10;        transform: scale(1.02);&#10;        box-shadow: none; /* Auch beim Hover kein Schatten am Bild */&#10;    }&#10;&#10;    /* Lightbox */&#10;    #lightbox-overlay {&#10;        display: none;&#10;        position: fixed;&#10;        inset: 0;&#10;        z-index: 1000;&#10;        background: rgba(0, 0, 0, .9);&#10;        justify-content: center;&#10;        align-items: center;&#10;    }&#10;&#10;    #lightbox-overlay.active {&#10;        display: flex;&#10;    }&#10;&#10;    #lightbox-content {&#10;        display: flex;&#10;        flex-direction: column;&#10;        align-items: center;&#10;        justify-content: center;&#10;        width: 100vw;&#10;        max-width: 100vw;&#10;        max-height: 100vh;&#10;        overflow: hidden;&#10;        padding: 2vh 0;&#10;        box-sizing: border-box;&#10;    }&#10;&#10;    #lightbox-filename {&#10;        color: #fff;&#10;        text-align: center;&#10;        margin-bottom: 1rem;&#10;        max-width: 90vw;&#10;        font-weight: bold;&#10;        word-break: break-all;&#10;        overflow-wrap: anywhere;&#10;        white-space: pre-line;&#10;        flex-shrink: 0;&#10;    }&#10;&#10;    #lightbox-img {&#10;        max-width: 90vw;&#10;        max-height: 60vh;&#10;        border-radius: 12px;&#10;        box-shadow: 0 10px 32px rgba(0, 0, 0, .4);&#10;        margin-bottom: 1rem;&#10;        margin-top: 0;&#10;        display: block;&#10;        object-fit: contain;&#10;        flex-shrink: 1;&#10;    }&#10;&#10;    #lightbox-caption {&#10;        color: #fff;&#10;        text-align: center;&#10;        margin-top: 0;&#10;        max-width: 90vw;&#10;        word-break: break-word;&#10;        overflow-wrap: anywhere;&#10;        white-space: pre-line;&#10;        font-size: 1rem;&#10;        flex-shrink: 0;&#10;        margin-bottom: 1rem;&#10;    }&#10;&#10;    .lb-btn {&#10;        position: absolute;&#10;        background: rgba(0, 0, 0, .5);&#10;        color: #fff;&#10;        border: none;&#10;        width: 44px;&#10;        height: 44px;&#10;        border-radius: 22px;&#10;        font-size: 1.6rem;&#10;        line-height: 44px;&#10;        text-align: center;&#10;        cursor: pointer;&#10;        transition: background .2s ease;&#10;    }&#10;&#10;    .lb-btn:hover {&#10;        background: rgba(0, 0, 0, .7);&#10;    }&#10;&#10;    .lb-close {&#10;        top: 24px;&#10;        right: 24px;&#10;        font-size: 2rem;&#10;        line-height: 44px;&#10;    }&#10;&#10;    .lb-prev {&#10;        left: 24px;&#10;        top: 50%;&#10;        transform: translateY(-50%);&#10;    }&#10;&#10;    .lb-next {&#10;        right: 24px;&#10;        top: 50%;&#10;        transform: translateY(-50%);&#10;    }&#10;&lt;/style&gt;&#10;&#10;&lt;div id=&quot;gallery&quot; class=&quot;ftg-grid&quot; data-row=&quot;10&quot; data-gap=&quot;12&quot;&gt;&#10;  {%- for file in gallery_images -%}&#10;    {%- assign meta = gallery_meta | where: &quot;path&quot;, file.path | first -%}&#10;    &lt;a class=&quot;ftg-item&quot;&#10;       href=&quot;{{ file.path | relative_url }}&quot;&#10;       data-index=&quot;{{ forloop.index0 }}&quot;&#10;       data-title=&quot;{{ meta.title | default: '' | escape }}&quot;&#10;       data-caption=&quot;{{ meta.caption | default: '' | escape }}&quot;&#10;       onclick=&quot;openLightbox(event, {{ forloop.index0 }});&quot;&gt;&#10;        &lt;img src=&quot;{{ file.path | relative_url }}&quot; alt=&quot;Bild&quot; loading=&quot;lazy&quot;&gt;&#10;    &lt;/a&gt;&#10;  {%- endfor -%}&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Lightbox --&gt;&#10;&lt;div id=&quot;lightbox-overlay&quot; aria-hidden=&quot;true&quot;&gt;&#10;    &lt;button class=&quot;lb-btn lb-close&quot; aria-label=&quot;Schließen&quot; onclick=&quot;closeLightbox()&quot;&gt;×&lt;/button&gt;&#10;    &lt;button class=&quot;lb-btn lb-prev&quot; aria-label=&quot;Vorheriges Bild&quot; onclick=&quot;prevLightbox()&quot;&gt;‹&lt;/button&gt;&#10;    &lt;div id=&quot;lightbox-content&quot;&gt;&#10;        &lt;div id=&quot;lightbox-filename&quot;&gt;&lt;/div&gt;&#10;        &lt;img id=&quot;lightbox-img&quot; src=&quot;&quot; alt=&quot;Großansicht&quot;&gt;&#10;        &lt;div id=&quot;lightbox-caption&quot;&gt;&lt;/div&gt;&#10;    &lt;/div&gt;&#10;    &lt;button class=&quot;lb-btn lb-next&quot; aria-label=&quot;Nächstes Bild&quot; onclick=&quot;nextLightbox()&quot;&gt;›&lt;/button&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;script&gt;&#10;    (function () {&#10;        const grid = document.querySelector('.ftg-grid');&#10;        if (!grid) return;&#10;&#10;        const GAP = parseInt(grid.dataset.gap || 12, 10);&#10;        const ROW = parseInt(grid.dataset.row || 10, 10);&#10;&#10;        function setSpan(item) {&#10;            const img = item.querySelector('img');&#10;            if (!img) return;&#10;            const height = img.getBoundingClientRect().height;&#10;            const span = Math.ceil((height + GAP) / (ROW + GAP));&#10;            item.style.gridRowEnd = 'span ' + span;&#10;        }&#10;&#10;        function layoutAll() {&#10;            grid.querySelectorAll('.ftg-item').forEach(setSpan);&#10;        }&#10;&#10;        window.addEventListener('load', layoutAll);&#10;        window.addEventListener('resize', layoutAll);&#10;        grid.querySelectorAll('img').forEach(img =&gt; {&#10;            if (img.complete) setSpan(img.closest('.ftg-item'));&#10;            else img.addEventListener('load', () =&gt; setSpan(img.closest('.ftg-item')));&#10;        });&#10;&#10;        // Lightbox-Logik&#10;        const overlay = document.getElementById('lightbox-overlay');&#10;        const lbImg = document.getElementById('lightbox-img');&#10;        const lbCaption = document.getElementById('lightbox-caption');&#10;        const lbFilename = document.getElementById('lightbox-filename');&#10;        const items = Array.from(grid.querySelectorAll('.ftg-item'));&#10;        let current = -1;&#10;&#10;        function show(index) {&#10;            if (!items.length) return;&#10;            current = (index + items.length) % items.length;&#10;            const item = items[current];&#10;            const href = item.getAttribute('href');&#10;            lbImg.src = href;&#10;            // Pfad (z.B. /assets/bild1.jpg) oberhalb anzeigen&#10;            lbFilename.textContent = href;&#10;            lbFilename.style.display = 'block';&#10;            // Beschreibung unterhalb anzeigen (caption oder title)&#10;            const title = item.getAttribute('data-title');&#10;            const caption = item.getAttribute('data-caption');&#10;            let text = '';&#10;            if (caption || title) {&#10;                text = caption || title;&#10;            }&#10;            lbCaption.textContent = text;&#10;            lbCaption.style.display = text ? 'block' : 'none';&#10;&#10;            // Bildgröße dynamisch anpassen, damit Text immer sichtbar bleibt&#10;            setTimeout(() =&gt; {&#10;                const overlayHeight = overlay.clientHeight;&#10;                const filenameHeight = lbFilename.offsetHeight;&#10;                const captionHeight = lbCaption.offsetHeight;&#10;                const buttonsHeight = 48; // grob geschätzt für Buttons oben/unten&#10;                const available = overlayHeight - filenameHeight - captionHeight - buttonsHeight - 40;&#10;                lbImg.style.maxHeight = (available &gt; 100 ? available : 100) + 'px';&#10;            }, 50);&#10;&#10;            overlay.classList.add('active');&#10;            overlay.setAttribute('aria-hidden', 'false');&#10;        }&#10;&#10;        window.openLightbox = function (e, index) {&#10;            e.preventDefault();&#10;            show(index);&#10;        };&#10;&#10;        window.closeLightbox = function () {&#10;            overlay.classList.remove('active');&#10;            overlay.setAttribute('aria-hidden', 'true');&#10;            lbImg.src = '';&#10;        };&#10;&#10;        window.prevLightbox = function () {&#10;            show(current - 1);&#10;        };&#10;        window.nextLightbox = function () {&#10;            show(current + 1);&#10;        };&#10;&#10;        overlay.addEventListener('click', (e) =&gt; {&#10;            if (e.target === overlay) window.closeLightbox();&#10;        });&#10;&#10;        document.addEventListener('keydown', (e) =&gt; {&#10;            if (!overlay.classList.contains('active')) return;&#10;            if (e.key === 'Escape') window.closeLightbox();&#10;            if (e.key === 'ArrowLeft') window.prevLightbox();&#10;            if (e.key === 'ArrowRight') window.nextLightbox();&#10;        });&#10;    })();&#10;&lt;/script&gt;&#10;" />
              <option name="updatedContent" value="{%- assign gallery_dir = include.dir | default: '/assets/' -%}&#10;{%- assign image_exts = &quot;jpg,jpeg,png,gif,webp&quot; | split: &quot;,&quot; -%}&#10;{%- assign gallery_images = &quot;&quot; | split: &quot;&quot; -%}&#10;{%- for file in site.static_files -%}&#10;  {%- assign ext = file.extname | remove: &quot;.&quot; | downcase -%}&#10;  {%- if image_exts contains ext and file.path contains gallery_dir -%}&#10;    {%- assign gallery_images = gallery_images | push: file -%}&#10;  {%- endif -%}&#10;{%- endfor -%}&#10;{%- assign gallery_images = gallery_images | sort: &quot;path&quot; -%}&#10;{%- assign gallery_meta = site.data.gallery | default: [] -%}&#10;&#10;&lt;style&gt;&#10;    /* Final-Tiles/Masonry Grid */&#10;    .ftg-grid {&#10;        display: grid;&#10;        grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));&#10;        grid-auto-rows: 10px;&#10;        grid-auto-flow: dense;&#10;        gap: 12px;&#10;        margin-top: 1rem;&#10;    }&#10;&#10;    .ftg-item {&#10;        position: relative;&#10;        display: block;&#10;        box-shadow: none; /* Kein Schatten an der Box */&#10;        cursor: pointer;&#10;        transition: box-shadow .2s ease;&#10;        padding: 0;&#10;        background: transparent;&#10;    }&#10;&#10;    .ftg-item:hover {&#10;        box-shadow: none; /* Auch beim Hover kein Schatten an der Box */&#10;    }&#10;&#10;    .ftg-item img {&#10;        display: block;&#10;        width: 100%;&#10;        height: auto;&#10;        background: #eee;&#10;        transition: transform .25s ease;&#10;        border-radius: 0;&#10;        box-shadow: none; /* Kein Schatten am Bild */&#10;    }&#10;&#10;    .ftg-item:hover img {&#10;        transform: scale(1.02);&#10;        box-shadow: none; /* Auch beim Hover kein Schatten am Bild */&#10;    }&#10;&#10;    /* Lightbox */&#10;    #lightbox-overlay {&#10;        display: none;&#10;        position: fixed;&#10;        inset: 0;&#10;        z-index: 1000;&#10;        background: rgba(0, 0, 0, .9);&#10;        justify-content: center;&#10;        align-items: center;&#10;    }&#10;&#10;    #lightbox-overlay.active {&#10;        display: flex;&#10;    }&#10;&#10;    #lightbox-content {&#10;        display: flex;&#10;        flex-direction: column;&#10;        align-items: center;&#10;        justify-content: flex-start;&#10;        width: 100vw;&#10;        max-width: 100vw;&#10;        max-height: 100vh;&#10;        overflow: hidden;&#10;        padding: 2vh 0;&#10;        box-sizing: border-box;&#10;    }&#10;&#10;    #lightbox-filename {&#10;        color: #fff;&#10;        text-align: center;&#10;        margin-bottom: 1rem;&#10;        max-width: 90vw;&#10;        font-weight: bold;&#10;        word-break: break-all;&#10;        overflow-wrap: anywhere;&#10;        white-space: pre-line;&#10;        flex-shrink: 0;&#10;    }&#10;&#10;    #lightbox-img {&#10;        max-width: 90vw;&#10;        /* Bildhöhe so begrenzen, dass immer Platz für Pfad und Caption bleibt */&#10;        max-height: 60vh;&#10;        border-radius: 12px;&#10;        box-shadow: 0 10px 32px rgba(0, 0, 0, .4);&#10;        margin-bottom: 1rem;&#10;        margin-top: 0;&#10;        display: block;&#10;        object-fit: contain;&#10;        flex-shrink: 1;&#10;    }&#10;&#10;    #lightbox-caption {&#10;        color: #fff;&#10;        text-align: center;&#10;        margin-top: 0;&#10;        max-width: 90vw;&#10;        word-break: break-word;&#10;        overflow-wrap: anywhere;&#10;        white-space: pre-line;&#10;        font-size: 1rem;&#10;        flex-shrink: 0;&#10;        margin-bottom: 1rem;&#10;    }&#10;&#10;    .lb-btn {&#10;        position: absolute;&#10;        background: rgba(0, 0, 0, .5);&#10;        color: #fff;&#10;        border: none;&#10;        width: 44px;&#10;        height: 44px;&#10;        border-radius: 22px;&#10;        font-size: 1.6rem;&#10;        line-height: 44px;&#10;        text-align: center;&#10;        cursor: pointer;&#10;        transition: background .2s ease;&#10;    }&#10;&#10;    .lb-btn:hover {&#10;        background: rgba(0, 0, 0, .7);&#10;    }&#10;&#10;    .lb-close {&#10;        top: 24px;&#10;        right: 24px;&#10;        font-size: 2rem;&#10;        line-height: 44px;&#10;    }&#10;&#10;    .lb-prev {&#10;        left: 24px;&#10;        top: 50%;&#10;        transform: translateY(-50%);&#10;    }&#10;&#10;    .lb-next {&#10;        right: 24px;&#10;        top: 50%;&#10;        transform: translateY(-50%);&#10;    }&#10;&lt;/style&gt;&#10;&#10;&lt;div id=&quot;gallery&quot; class=&quot;ftg-grid&quot; data-row=&quot;10&quot; data-gap=&quot;12&quot;&gt;&#10;  {%- for file in gallery_images -%}&#10;    {%- assign meta = gallery_meta | where: &quot;path&quot;, file.path | first -%}&#10;    &lt;a class=&quot;ftg-item&quot;&#10;       href=&quot;{{ file.path | relative_url }}&quot;&#10;       data-index=&quot;{{ forloop.index0 }}&quot;&#10;       data-title=&quot;{{ meta.title | default: '' | escape }}&quot;&#10;       data-caption=&quot;{{ meta.caption | default: '' | escape }}&quot;&#10;       onclick=&quot;openLightbox(event, {{ forloop.index0 }});&quot;&gt;&#10;        &lt;img src=&quot;{{ file.path | relative_url }}&quot; alt=&quot;Bild&quot; loading=&quot;lazy&quot;&gt;&#10;    &lt;/a&gt;&#10;  {%- endfor -%}&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Lightbox --&gt;&#10;&lt;div id=&quot;lightbox-overlay&quot; aria-hidden=&quot;true&quot;&gt;&#10;    &lt;button class=&quot;lb-btn lb-close&quot; aria-label=&quot;Schließen&quot; onclick=&quot;closeLightbox()&quot;&gt;×&lt;/button&gt;&#10;    &lt;button class=&quot;lb-btn lb-prev&quot; aria-label=&quot;Vorheriges Bild&quot; onclick=&quot;prevLightbox()&quot;&gt;‹&lt;/button&gt;&#10;    &lt;div id=&quot;lightbox-content&quot;&gt;&#10;        &lt;div id=&quot;lightbox-filename&quot;&gt;&lt;/div&gt;&#10;        &lt;img id=&quot;lightbox-img&quot; src=&quot;&quot; alt=&quot;Großansicht&quot;&gt;&#10;        &lt;div id=&quot;lightbox-caption&quot;&gt;&lt;/div&gt;&#10;    &lt;/div&gt;&#10;    &lt;button class=&quot;lb-btn lb-next&quot; aria-label=&quot;Nächstes Bild&quot; onclick=&quot;nextLightbox()&quot;&gt;›&lt;/button&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;script&gt;&#10;    (function () {&#10;        const grid = document.querySelector('.ftg-grid');&#10;        if (!grid) return;&#10;&#10;        const GAP = parseInt(grid.dataset.gap || 12, 10);&#10;        const ROW = parseInt(grid.dataset.row || 10, 10);&#10;&#10;        function setSpan(item) {&#10;            const img = item.querySelector('img');&#10;            if (!img) return;&#10;            const height = img.getBoundingClientRect().height;&#10;            const span = Math.ceil((height + GAP) / (ROW + GAP));&#10;            item.style.gridRowEnd = 'span ' + span;&#10;        }&#10;&#10;        function layoutAll() {&#10;            grid.querySelectorAll('.ftg-item').forEach(setSpan);&#10;        }&#10;&#10;        window.addEventListener('load', layoutAll);&#10;        window.addEventListener('resize', layoutAll);&#10;        grid.querySelectorAll('img').forEach(img =&gt; {&#10;            if (img.complete) setSpan(img.closest('.ftg-item'));&#10;            else img.addEventListener('load', () =&gt; setSpan(img.closest('.ftg-item')));&#10;        });&#10;&#10;        // Lightbox-Logik&#10;        const overlay = document.getElementById('lightbox-overlay');&#10;        const lbImg = document.getElementById('lightbox-img');&#10;        const lbCaption = document.getElementById('lightbox-caption');&#10;        const lbFilename = document.getElementById('lightbox-filename');&#10;        const items = Array.from(grid.querySelectorAll('.ftg-item'));&#10;        let current = -1;&#10;&#10;        function show(index) {&#10;            if (!items.length) return;&#10;            current = (index + items.length) % items.length;&#10;            const item = items[current];&#10;            const href = item.getAttribute('href');&#10;            lbImg.src = href;&#10;            lbFilename.textContent = href;&#10;            lbFilename.style.display = 'block';&#10;            const title = item.getAttribute('data-title');&#10;            const caption = item.getAttribute('data-caption');&#10;            let text = '';&#10;            if (caption || title) {&#10;                text = caption || title;&#10;            }&#10;            lbCaption.textContent = text;&#10;            lbCaption.style.display = text ? 'block' : 'none';&#10;&#10;            // Bildgröße dynamisch anpassen, damit Text immer sichtbar bleibt&#10;            setTimeout(() =&gt; {&#10;                const overlayHeight = overlay.clientHeight;&#10;                const filenameHeight = lbFilename.offsetHeight;&#10;                const captionHeight = lbCaption.offsetHeight;&#10;                const buttonsHeight = 48; // grob geschätzt für Buttons oben/unten&#10;                // 40px zusätzlicher Puffer&#10;                const available = overlayHeight - filenameHeight - captionHeight - buttonsHeight - 40;&#10;                lbImg.style.maxHeight = (available &gt; 100 ? available : 100) + 'px';&#10;            }, 50);&#10;&#10;            overlay.classList.add('active');&#10;            overlay.setAttribute('aria-hidden', 'false');&#10;        }&#10;&#10;        window.openLightbox = function (e, index) {&#10;            e.preventDefault();&#10;            show(index);&#10;        };&#10;&#10;        window.closeLightbox = function () {&#10;            overlay.classList.remove('active');&#10;            overlay.setAttribute('aria-hidden', 'true');&#10;            lbImg.src = '';&#10;        };&#10;&#10;        window.prevLightbox = function () {&#10;            show(current - 1);&#10;        };&#10;        window.nextLightbox = function () {&#10;            show(current + 1);&#10;        };&#10;&#10;        overlay.addEventListener('click', (e) =&gt; {&#10;            if (e.target === overlay) window.closeLightbox();&#10;        });&#10;&#10;        document.addEventListener('keydown', (e) =&gt; {&#10;            if (!overlay.classList.contains('active')) return;&#10;            if (e.key === 'Escape') window.closeLightbox();&#10;            if (e.key === 'ArrowLeft') window.prevLightbox();&#10;            if (e.key === 'ArrowRight') window.nextLightbox();&#10;        });&#10;    })();&#10;&lt;/script&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>